traefik:
  image: traefik
  container_name: traefik
  command: --web --docker --docker.domain=docker.localhost
  ports:
    - "8089:80"
    - "8090:8080"
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /dev/null:/traefik.toml

user:
  image: teamdronefireman/user-service
  container_name: user-dev-service
  ports:
    - "12346:3000"
  labels:
    - "traefik.backend=user-dev"
    - "traefik.frontend.rule=Host:user.docker.localhost"
  links:
    - mongo-dev:mongo
  environment:
    - NODE_ENV=DEV

intervention:
  image: teamdronefireman/intervention-service
  container_name: intervention-dev-service
  ports:
    - "12345:3000"
  labels:
    - "traefik.backend=intervention-dev"
    - "traefik.frontend.rule=Host:intervention.docker.localhost"
  links:
    - mongo-dev:mongo
  environment:
    - NODE_ENV=DEV
  volumes:
    - /root/teamdronefireman/gcm:/

mean:
  image: teamdronefireman/mean-service
  container_name: mean-dev-service
  ports:
    - "12347:3000"
  labels:
    - "traefik.backend=mean-dev"
    - "traefik.frontend.rule=Host:mean.docker.localhost"
  links:
    - mongo-dev:mongo
  environment:
    - NODE_ENV=DEV

drone:
  image: teamdronefireman/drone-service
  container_name: drone-dev-service
  ports:
    - "12349:3000"
  labels:
    - "traefik.backend=drone-dev"
    - "traefik.frontend.rule=Host:drone.docker.localhost"
  links:
    - mongo-dev:mongo
  environment:
    - NODE_ENV=DEV

sig:
  image: teamdronefireman/sig-service
  container_name: sig-dev-service
  ports:
    - "12350:3000"
  labels:
    - "traefik.backend=sig-dev"
    - "traefik.frontend.rule=Host:sig.docker.localhost"
  links:
    - mongo-dev:mongo
  environment:
    - NODE_ENV=DEV

image:
  image: teamdronefireman/image-service
  container_name: image-dev-service
  ports:
    - "12353:3000"
  labels:
    - "traefik.backend=image-dev"
    - "traefik.frontend.rule=Host:image.docker.localhost"
  links:
    - mongo-dev:mongo
  environment:
    - NODE_ENV=DEV

register:
  image: teamdronefireman/register-service
  container_name: register-dev-service
  ports:
    - "12354:3000"
  labels:
    - "traefik.backend=register-dev"
    - "traefik.frontend.rule=Host:register.docker.localhost"
  links:
    - mongo-dev:mongo
  environment:
    - NODE_ENV=DEV

sinister:
  image: teamdronefireman/sinister-service
  container_name: sinister-dev-service
  ports:
    - "12348:3000"
  labels:
    - "traefik.backend=sinister-dev"
    - "traefik.frontend.rule=Host:sinister.docker.localhost"
  links:
    - mongo-dev:mongo
  environment:
    - NODE_ENV=DEV

push:
  image: teamdronefireman/push-service
  container_name: push-dev-service
  ports:
    - "12351:3000"
  labels:
    - "traefik.backend=push-dev"
    - "traefik.frontend.rule=Host:push.docker.localhost"
  links:
    - mongo-dev:mongo
  environment:
    - NODE_ENV=DEV

sig-extern:
  image: teamdronefireman/sig-extern-service
  container_name: sig-extern-dev-service
  ports:
    - "12352:3000"
  labels:
    - "traefik.backend=sig-extern-dev"
    - "traefik.frontend.rule=Host:sig-extern.docker.localhost"
  links:
    - mongo-dev:mongo
  environment:
    - NODE_ENV=DEV

mongo-dev:
  image: mongo
  container_name: mongo-dev
  ports:
    - "27017:27017"
  volumes_from:
    - mongo-dev-data-volume
